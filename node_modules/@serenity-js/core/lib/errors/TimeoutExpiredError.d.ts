import { JSONObject } from 'tiny-types';
import { Duration } from '../model/Duration';
import { RuntimeError } from './RuntimeError';
/**
 * Thrown to indicate that an {@apilink Interaction}, a {@apilink Task} or a test scenario
 * took longer to execute than the expected timeout.
 *
 * @group Errors
 */
export declare class TimeoutExpiredError extends RuntimeError {
    readonly timeout: Duration;
    static fromJSON(serialised: JSONObject): TimeoutExpiredError;
    /**
     * @param message
     *  Human-readable description of the error
     *
     * @param timeout
     *  The maximum amount of time an operation was expected to take
     *
     * @param [cause]
     *  The root cause of this {@apilink RuntimeError}, if any
     */
    constructor(message: string, timeout: Duration, cause?: Error);
}
//# sourceMappingURL=TimeoutExpiredError.d.ts.map